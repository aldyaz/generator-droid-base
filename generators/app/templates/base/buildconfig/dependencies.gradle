ext {
    compileSdkVersion = 31
    minSdkVersion = 21
    targetSdkVersion = 30
    buildToolsVersion = "30.0.3"

    kotlinVersion = '1.6.10'
    gradlePluginVersion = '7.0.0'
    googleMaterialVersion = '1.4.0'
    androidArchVersion = '1.1.1'
    retrofitVersion = '2.9.0'
    okHttpVersion = '4.9.1'
    rxAndroidVersion = '3.0.0'
    daggerVersion = '2.42'

    androidxCoreVersion = '1.8.0'
    androidxAppCompatVersion = '1.4.2'
    androidXMultidexVersion = '2.0.0'
    androidXCardViewVersion = '1.0.0'
    androidXRecyclerViewVersion = '1.2.1'
    androidXAnnotationVersion = '1.3.0'
    androidXBrowser = '1.4.0'
    androidXConstraintLayoutVersion = '2.1.2'
    androidXLifecycleVersion = '2.4.1'
    androidXArchVersion = '2.1.0'
    androidXActivityCompose = '1.4.0'
    androidXHiltVersion = '1.0.0'

    aacVersion = '2.2.0'
    glideVersion = '4.9.0'
    stethoVersion = '1.5.1'
    junitVersion = '4.12'
    espressoVersion = '3.1.0'
    androidTestSupportVersion = '1.1.0'
    mockitoKotlinVersion = '2.2.0'
    dexmakerMockitoVersion = '2.19.1'
    robolectricVersion = '4.0.1'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    coroutinesVersion = '1.3.7'
    hiltVersion = '2.38.1'
    kotlinCompilerExtVersion = '1.1.1'

    // Jetpack Compose
    composeUiVersion = '1.1.1'
    composeUiToolingVersion = '1.1.1'
    composeFoundationVersion = '1.1.1'
    composeMaterialVersion = '1.1.1'
    composeLifecycleViewModelVersion = '2.4.1'
    composeRuntimeVersion = '1.1.1'

    moshiVersion = '1.13.0'
    chuckerVersion = '3.5.2'

    coroutinesVersion = '1.6.2'

    kotlin = [
            classpath : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
            stdlib    : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            allopen   : "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion",
            stdlibJdk7: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    ]

    java = [
            javaxInject: "javax.inject:javax.inject:$javaxInjectVersion",
            javaxAnnotation: "javax.annotation:jsr250-api:$javaxAnnotationVersion"
    ]

    androidGradle = [
            classpath: "com.android.tools.build:gradle:$gradlePluginVersion"
    ]

    androidX = [
            multiDex          : "androidx.multidex:multidex:$androidXMultidexVersion",
            core              : "androidx.core:core-ktx:$androidxCoreVersion",
            appCompat         : "androidx.appcompat:appcompat:$androidxAppCompatVersion",
            cardView          : "androidx.cardview:cardview:$androidXCardViewVersion",
            recyclerView      : "androidx.recyclerview:recyclerview:$androidXRecyclerViewVersion",
            annotation        : "androidx.annotation:annotation:$androidXAnnotationVersion",
            browser           : "androidx.browser:browser:$androidXBrowser",
            constraintLayout  : "androidx.constraintlayout:constraintlayout:$androidXConstraintLayoutVersion",
            activityCompose   : "androidx.activity:activity-compose:$androidXActivityCompose",
            hiltCompiler      : "androidx.hilt:hilt-compiler:$androidXHiltVersion"
    ]

    lifecycle = [
            viewModel   : "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidXLifecycleVersion",
            liveData    : "androidx.lifecycle:lifecycle-livedata-ktx:$androidXLifecycleVersion",
            compiler    : "androidx.lifecycle:lifecycle-compiler:$androidXLifecycleVersion"
    ]

    google = [
            material: "com.google.android.material:material:$googleMaterialVersion",
            daggerCore: "com.google.dagger:dagger:$daggerVersion",
            daggerAndroid: "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport: "com.google.dagger:dagger-android-support:$daggerVersion",
            daggerProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
            hiltClasspath: "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion",
            hiltAndroid: "com.google.dagger:hilt-android:$hiltVersion",
            hiltCompiler: "com.google.dagger:hilt-android-compiler:$hiltVersion"
    ]

    net = [
            retrofit     : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gsonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            moshiConverter: "com.squareup.retrofit2:converter-moshi:$retrofitVersion",
            okHttpLogging: "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
            moshiKotlin: "com.squareup.moshi:moshi-kotlin:$moshiVersion",
            moshiKotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion",
            chuckerDebug: "com.github.chuckerteam.chucker:library:$chuckerVersion",
            chuckerRelease: "com.github.chuckerteam.chucker:library-no-op:$chuckerVersion"
    ]

    glide = [
            core: "com.github.bumptech.glide:glide:$glideVersion"
    ]

    stetho = [
            core: "com.facebook.stetho:stetho:$stethoVersion"
    ]

    coroutines = [
            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    ]

    compose = [
            ui: "androidx.compose.ui:ui:$composeUiVersion",
            tooling: "androidx.compose.ui:ui-tooling:$composeUiToolingVersion",
            toolingPreview: "androidx.compose.ui:ui-tooling-preview:$composeUiToolingVersion",
            foundation: "androidx.compose.foundation:foundation:$composeFoundationVersion",
            material: "androidx.compose.material:material:$composeMaterialVersion",
            lifecycleViewModel: "androidx.lifecycle:lifecycle-viewmodel-compose:$composeLifecycleViewModelVersion",
            runtimeLiveData: "androidx.compose.runtime:runtime-livedata:$composeRuntimeVersion"
    ]

    coroutines = [
            core: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    ]

    test = [
            junit          : "junit:junit:$junitVersion",
            androidRunner  : "androidx.test:runner:$androidTestSupportVersion",
            androidRules   : "androidx.test:rules:$androidTestSupportVersion",
            dexmakerMockito: "com.linkedin.dexmaker:dexmaker-mockito:$dexmakerMockitoVersion",
            espressoCore   : "androidx.test.espresso:espresso-core:$espressoVersion",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:$espressoVersion",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:$espressoVersion",
            coreTesting    : "androidx.arch.core:core-testing:$androidXArchVersion",
            kotlinJunit    : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
            mockitoKotlin  : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            robolectric    : "org.robolectric:robolectric:$robolectricVersion"
    ]

}